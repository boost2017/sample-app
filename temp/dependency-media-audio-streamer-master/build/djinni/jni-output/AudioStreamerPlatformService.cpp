// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from proj.djinni

#include "AudioStreamerPlatformService.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

AudioStreamerPlatformService::AudioStreamerPlatformService() : ::djinni::JniInterface<::EzoRed::Media::AudioStreamerPlatformService, AudioStreamerPlatformService>() {}

AudioStreamerPlatformService::~AudioStreamerPlatformService() = default;

AudioStreamerPlatformService::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

AudioStreamerPlatformService::JavaProxy::~JavaProxy() = default;

std::string AudioStreamerPlatformService::JavaProxy::getUrl() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::AudioStreamerPlatformService>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getUrl);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
void AudioStreamerPlatformService::JavaProxy::setUrl(const std::string & c_url) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::AudioStreamerPlatformService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_setUrl,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_url)));
    ::djinni::jniExceptionCheck(jniEnv);
}
bool AudioStreamerPlatformService::JavaProxy::isPlaying() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::AudioStreamerPlatformService>::get();
    auto jret = jniEnv->CallBooleanMethod(Handle::get().get(), data.method_isPlaying);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Bool::toCpp(jniEnv, jret);
}
void AudioStreamerPlatformService::JavaProxy::play() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::AudioStreamerPlatformService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_play);
    ::djinni::jniExceptionCheck(jniEnv);
}
void AudioStreamerPlatformService::JavaProxy::pause() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::AudioStreamerPlatformService>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_pause);
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
