# The Audio Streamer Platform Service class provides an abstract interface for which
# we can implement a platform specific player for iOS and Android. On iOS
# this will be achieved by wrapping the AVPlayer class from AVFoundation,
# while on Android this will be achieved by wrapping the MediaPlayer class.
audio_streamer_platform_service = interface +j +o {

    # Provides the currently loaded URL song reference
    get_url(): string;

    # Sets the current URL song reference (will stop the player from playing
    # if it is currently playing)
    set_url(url: string);

    # Returns a boolean indicating whether or not the player is currently
    # playing some audio
    is_playing(): bool;

    # Tells the player to start playing audio.
    play();

    # Tells the player to pause any audio it may be playing.
    pause();

}

# The Audio Streamer Bridge class serves as a concrete class that wraps our proxy
# implementation and provides our client a singleton instance to reuse.
audio_streamer_bridge = interface +c {

    # A singleton instance of the audio streamer (in most applications you will
    # only be dealing with a single streamer reference since you don't want
    # multiple players playing at once)
    static shared_instance(): audio_streamer_bridge;

    # Sets an instance of the proxy class that is used to implement the
    # platform specific proxy
    set_platform_service(ps: audio_streamer_platform_service);

    # Gets an instance of the proxy class that is used to implement the
    # platform specific proxy
    get_platform_service(): audio_streamer_platform_service;

    # Provides the currently loaded URL song reference
    get_url(): string;

    # Sets the current URL song reference (will stop the player from playing
    # if it is currently playing)
    set_url(url: string);

    # Returns a boolean indicating whether or not the player is currently
    # playing some audio
    is_playing(): bool;

    # Tells the player to start playing audio.
    play();

    # Tells the player to pause any audio it may be playing.
    pause();

}
