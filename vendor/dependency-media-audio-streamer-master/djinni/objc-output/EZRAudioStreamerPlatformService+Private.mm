// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from proj.djinni

#import "EZRAudioStreamerPlatformService+Private.h"
#import "EZRAudioStreamerPlatformService.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class AudioStreamerPlatformService::ObjcProxy final
: public ::EzoRed::Media::AudioStreamerPlatformService
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::AudioStreamerPlatformService;
public:
    using ObjcProxyBase::ObjcProxyBase;
    std::string getUrl() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getUrl];
            return ::djinni::String::toCpp(objcpp_result_);
        }
    }
    void setUrl(const std::string & c_url) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() setUrl:(::djinni::String::fromCpp(c_url))];
        }
    }
    bool isPlaying() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() isPlaying];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
    void play() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() play];
        }
    }
    void pause() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() pause];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto AudioStreamerPlatformService::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto AudioStreamerPlatformService::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
