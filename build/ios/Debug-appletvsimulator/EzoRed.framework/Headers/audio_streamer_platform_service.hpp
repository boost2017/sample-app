// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from proj.djinni

#pragma once

#include <string>

namespace EzoRed { namespace Media {

/**
 * The Audio Streamer Platform Service class provides an abstract interface for which
 * we can implement a platform specific player for iOS and Android. On iOS
 * this will be achieved by wrapping the AVPlayer class from AVFoundation,
 * while on Android this will be achieved by wrapping the MediaPlayer class.
 */
class AudioStreamerPlatformService {
public:
    virtual ~AudioStreamerPlatformService() {}

    /** Provides the currently loaded URL song reference */
    virtual std::string getUrl() = 0;

    /**
     * Sets the current URL song reference (will stop the player from playing
     * if it is currently playing)
     */
    virtual void setUrl(const std::string & url) = 0;

    /**
     * Returns a boolean indicating whether or not the player is currently
     * playing some audio
     */
    virtual bool isPlaying() = 0;

    /** Tells the player to start playing audio. */
    virtual void play() = 0;

    /** Tells the player to pause any audio it may be playing. */
    virtual void pause() = 0;
};

} }  // namespace EzoRed::Media
